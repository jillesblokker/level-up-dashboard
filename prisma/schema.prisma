// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type             String
  provider         String
  providerAccountId String
  refresh_token    String? @db.Text
  access_token     String? @db.Text
  expires_at       Int?
  token_type       String?
  scope            String?
  id_token         String? @db.Text
  session_state    String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  isAdmin       Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Character {
  id        Int      @id @default(autoincrement())
  gold      Int      @default(1000)
  level     Int      @default(1)
  experience Int     @default(0)
  inventory Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RealmMap {
  id        Int      @id @default(autoincrement())
  grid      Json     // Store the grid data as JSON
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Quest {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  reward      Int
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Achievement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  unlocked    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Kingdom {
  id        Int      @id @default(autoincrement())
  name      String
  resources Json     // Store kingdom resources as JSON
  buildings Json     // Store building data as JSON
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
